function MakeConditioningProtocol(iti, itivar, nrepeats,  tonefreq, toneamp, tonedur, ramp) 
%usage: makeConditioningProtocol(iti,delay, tonefreq, toneamp, tonedur, ramp) 
% makes a protocol of paired pulses and tones
% the pulses are generated by PPALaser, set the pulse timing in that module
% use the PPALaser output (usually used to trigger laser) for triggering the Grass S88
% you can control the delay/duration/amplitude of the shock(s) with the S88 front panel
% 
% If you want, you can also insert unpaired tones. A dialog box pops up
% allowing you to select a tuning curve protocol. If you choose one, those
% tones will be played first, before the tone-shock pairing. If you have
% the stimulus protocol repeating, you will then get a sequence of unpaired
% tones (the tuning curve) and the tone-shock pair, repeatedly. If you
% cancel out of this dialog box, no unpaired tones are inserted.

% inputs:
% iti: inter-trial-interval, time from one tone to next tone (in ms)
% itivar: fractional variability of iti. Use 0 for fixed iti, or e.g. 0.1 to have iti vary by up to +-10%
% nrepeats: number of repeats. We cycle through unpaired tones (if any) and shock, nrepeats times. 
%  the point of using nrepeats (instead of just turning "repeat" on in
%  StimulusProcotol, is to achieve iti variability. If you don't need
%  randomized itis then you could just set nrepeats to 1 and use
%  StimulusProcotol/repeat.
%
% the following four parameters are for the tone
% tonefreq (Hz), -1 for whitenoise
% toneamp (dB)
% tonedur (ms)
% ramp (ms) 
%
% outputs:
% creates a suitably named stimulus protocol in
% \protocols\Conditioning Protocols
%
%
%example calls: 
% MakeConditioningProtocol(20e3,0,1, 8000, 80, 200, 5) 
% MakeConditioningProtocol(30e3,.5,20, 10000, 80, 1000, 5) 

global pref
Prefs
cd (pref.stimuli)
%get tuning curve?
cd ('Tuning Curve protocols')
[tcfilename, tcpathname] = uigetfile('*.mat', 'Choose Tuning Curve to incorporate unpaired tones into condictioning protocol (press cancel for paired tones only):');
if isequal(tcfilename,0) || isequal(tcpathname,0)
    disp('User pressed cancel: no tones inserted')
    tc.stimuli(1).param.name='no_tones';
    tc.stimuli(1).param.description='no_tones';
    tcfilename='';
    tonesperrepeat=0;
else
    disp(['User selected ', fullfile(tcpathname, tcfilename)])
    tc=load(fullfile(tcpathname, tcfilename));

    %get repeatlength by tabulating freqs/amps
    j=0;allisis=[];
    for i=2:length(tc.stimuli)
        if strcmp(tc.stimuli(i).type, '2tone') | strcmp(tc.stimuli(i).type, 'tone')
            j=j+1;
            allfreqs(j)=tc.stimuli(i).param.frequency;
            allamps(j)=tc.stimuli(i).param.amplitude;
            alldurs(j)=tc.stimuli(i).param.duration;
            if isfield(tc.stimuli(i).param, 'next')
            end
        elseif strcmp(tc.stimuli(i).type, 'whitenoise') | strcmp(tc.stimuli(i).type, 'clicktrain')
            j=j+1;
            allfreqs(j)=-1;
            allamps(j)=tc.stimuli(i).param.amplitude;
            alldurs(j)=tc.stimuli(i).param.duration;
            allisis(j)=tc.stimuli(i).param.next;
        end
    end
    freqs=unique(allfreqs);
    amps=unique(allamps);
    durs=unique(alldurs);
    tone_isi=unique(allisis);
    numfreqs=length(freqs);
    numamps=length(amps);
    numdurs=length(durs);
    tonesperrepeat=numfreqs*numamps;
end

    



%put into stimuli structure
stimuli(1).type='exper2 stimulus protocol';

stimuli(1).param.name= sprintf('Conditioning Protocol_%d_%d_%d_%d_%d_%s', iti, itivar, tonefreq, toneamp, tonedur, tc.stimuli(1).param.name);
stimuli(1).param.description= sprintf('Conditioning pair (pulse+tone), iti %dms, itivar %.1f, %dHz, %ddB, %dms tone, %s', iti, itivar, tonefreq, toneamp, tonedur, tc.stimuli(1).param.description);

filename=sprintf('Cond_protocol_%d_%.1f_%d_%d_%d_%s.mat', iti, itivar, tonefreq, toneamp, tonedur, tcfilename);
jj=1;

for rep=1:nrepeats
    %insert tones
    for n=1:tonesperrepeat
        jj=jj+1;
             if (n+1+tonesperrepeat*(rep-1))>length(tc.stimuli)
                 error('\nran out of tones after %d tones (%d reps)', n+1+tonesperrepeat*(rep-1),rep)
             else
                 tone=tc.stimuli(n+1+tonesperrepeat*(rep-1));
                 stimuli(jj)=tone;
             end
    end
    
    jj=jj+1;
    
    this_iti=round(iti+iti*itivar*(2*rand(1)-1));

    if tonefreq==-1
        stimuli(jj).type='whitenoise';
    else
        stimuli(jj).type='tone';
        stimuli(jj).param.frequency=tonefreq;
    end
    stimuli(jj).param.amplitude=toneamp;
    stimuli(jj).param.duration=tonedur;
    stimuli(jj).param.ramp=ramp;
    stimuli(jj).param.AOPulseOn=1; % Set shock/laser flag.
    stimuli(jj).param.next=this_iti;
    
end

Prefs
cd (pref.stimuli)
if exist('Conditioning Protocols')~=7
mkdir('Conditioning Protocols')
end
cd ('Conditioning Protocols')

save(filename, 'stimuli');
fprintf('\ncreated file %s \nin directory %s', filename, pwd)


