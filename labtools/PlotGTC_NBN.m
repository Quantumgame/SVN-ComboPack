function PlotGTC_NBN(varargin)
%usage:     PlotGTC_NBN(expdate, session, filenum)
%           PlotGTC_NBN(expdate, session, filenum, [xlimits])
%           PlotGTC_NBN(out)
% E2 tuning curve script
%plot ge/gi peak, sum, ratio, etc. tuning curves for narrow-band stimuli
%looks for an outfile data structure generated by ProcessGeGi_NBN
%xlimits is used to specify time window for peak detection and integration

if nargin==0
    fprintf('\nno input');
    return
elseif nargin==1
    out=varargin{1};
    dur=max(out.durs);
    if dur<200 dur=200;end
    xlimits=[-.5*dur 1.5*dur]; %x limits for axis

elseif nargin==3
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    godatadir(expdate, session, filenum)
    outfile=sprintf('out%s-%s-%s.mat', expdate, session, filenum);
    if exist(outfile)==2
        load(outfile)
        dur=max(out.durs);
        if dur<200 dur=200;end
        xlimits=[-.5*dur 1.5*dur]; %x limits for axis
        if ~isfield(out, 'GE')
            fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
            ProcessGeGi_NBN(expdate, session, filenum, 0, xlimits);
            load(outfile)

        end
    else
        fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
        ProcessGeGi_NBN(expdate, session, filenum, 0, [0 300]);
        load(outfile)

    end

elseif nargin==4
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    xlimits=varargin{4};
    godatadir(expdate, session, filenum)
    outfile=sprintf('out%s-%s-%s.mat', expdate, session, filenum);
    load(outfile)
    if exist(outfile)==2
        load(outfile)
        if ~isfield(out, 'GE')
            fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
            ProcessGeGi_NBN(expdate, session, filenum, 0, xlimits);
            load(outfile)
        end
    else
        fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
        ProcessGeGi_NBN(expdate, session, filenum, 0, xlimits);
        load(outfile)
    end
    in=out;

else
    error('\nPlotGeGi: wrong number of arguments');
end


M1=out.M1;
mM1=out.mM1;
expdate=out.expdate;
session=out.session;
filenum=out.filenum;
freqs=out.freqs;
amps=out.amps;
bws=out.bws
potentials=out.potentials;
samprate=out.samprate;
numamps=length(amps);
numfreqs=length(freqs);
numpotentials=length(potentials);
numbws=length(bws);
outxl=out.xlimits;
if nargin==4
    xlimits=varargin{4};
    if isempty(xlimits) | length(xlimits)~=2 xl=outxl;end
else
    xlimits=outxl;
end
xl=xlimits-outxl(1); %xl is the requested xlimits corrected for the xlimits used when outfile was created

%find optimal axis limits
ylimits=[0 0];
for bwindex=1:numbws
    for aindex=[numamps:-1:1]
        for findex=1:numfreqs
            ge=squeeze(out.GE(findex, aindex,  bwindex, :));
            gi=squeeze(out.GI(findex, aindex,  bwindex, :));
            if min([ge; gi])<ylimits(1) ylimits(1)=min([ge; gi]);end
            if max([ge; gi])>ylimits(2) ylimits(2)=max([ge; gi]);end
        end
    end
end


%ylimits(2)=10;

%plot the peak tuning curve
for aindex=[1:numamps]
    figure
    p=0;
    subplot1( numbws,numfreqs-1)
    subplot1(1)
    title(sprintf('%s-%s-%s freq: %.1fkHz, amp: %ddB', expdate,session, filenum, freqs(2:end)/1000, amps(aindex)), 'horizontala', 'center')
    for bwindex=[1:numbws]
        for findex=2:numfreqs
            if bwindex==numbws %inf==wn
                findex=1;
            end
            ge=squeeze(out.GE(findex, aindex, bwindex,  xl(1)*samprate/1000+1:xl(2)*samprate/1000));
            gi=squeeze(out.GI(findex, aindex, bwindex,   xl(1)*samprate/1000+1:xl(2)*samprate/1000));
            sumge(bwindex)=sum(ge);
            sumgi(bwindex)=sum(gi);
            peakge(bwindex)=max(ge);
            peakgi(bwindex)=max(gi);
            peakEItc=peakge./peakgi;
            sumEItc=sumge./sumgi;
            peakIEtc=peakgi./peakge;
            sumIEtc=sumgi./sumge;
            peakFetc=peakge./(peakge+peakgi);
            sumFetc=sumge./(sumge+sumgi);

            p=p+1;
            subplot1(p)
            t=1:length(ge);
            t=t/10;
            t=t+xlimits(1);
            plot(t, gi, 'r', t, ge, 'g')
            ylim(ylimits)
            pos=get(gca, 'pos');
            pos(3)=pos(3)/2;
            set(gca, 'pos', pos)
        end
    end

    figure
    subplot1(4,2, 'Gap', [.04 .01], 'YTickL', 'All')
    p=0;
    p=p+1;
    subplot1(p)
    title(sprintf('%s-%s-%s freq: %.1fkHz, amp: %ddB', expdate,session, filenum, freqs(2:end)/1000, amps(aindex)), 'horizontala', 'center')
    t=1:numbws;
    plot(t, peakgi, 'ro-', t, peakge, 'go-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    ylim(ylimits)
    set(gca, 'xtick', 1:numbws)
    try
        set(gca, 'ytick', [0, round(mean(ylimits)), floor(ylimits(2))])
    catch
        set(gca, 'ytick', [ylimits(1) mean(ylimits), ylimits(2)])
    end
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('g peak, nS')


    p=p+1;
    subplot1(p)
    t=1:numbws;
    plot(t, sumgi, 'ro-', t, sumge, 'go-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    set(gca, 'xtick', 1:numbws)
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('g sum, nS')


    p=p+1;
    subplot1(p)
    t=1:numbws;
    plot(t, peakEItc, 'ko-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    line(xlim, [1 1], 'linestyle', '--', 'color', [.5 .5 .5])
    set(gca, 'xtick', 1:numbws)
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('E/I ratio, peak')


    p=p+1;
    subplot1(p)
    t=1:numbws;
    plot(t, sumEItc, 'ko-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    line(xlim, [1 1], 'linestyle', '--', 'color', [.5 .5 .5])
    set(gca, 'xtick', 1:numbws)
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('E/I ratio, sum')

    p=p+1;
    subplot1(p)
    t=1:numbws;
    plot(t, peakFetc, 'ko-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    line(xlim, [.5 .5], 'linestyle', '--', 'color', [.5 .5 .5])
    set(gca, 'xtick', 1:numbws)
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('Fe, peak')


    p=p+1;
    subplot1(p)
    t=1:numbws;
    plot(t, sumFetc, 'ko-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    line(xlim, [.5 .5], 'linestyle', '--', 'color', [.5 .5 .5])
    set(gca, 'xtick', 1:numbws)
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('Fe, sum')

    p=p+1;
    subplot1(p)
    t=1:numbws;
    plot(t, peakIEtc, 'ko-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    line(xlim, [1 1], 'linestyle', '--', 'color', [.5 .5 .5])
    set(gca, 'xtick', 1:numbws)
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('I/E ratio, peak')


    p=p+1;
    subplot1(p)
    t=1:numbws;
    plot(t, sumIEtc, 'ko-')
    xlimits=[.5 numbws+.5];
    xlim(xlimits);
    line(xlim, [1 1], 'linestyle', '--', 'color', [.5 .5 .5])
    set(gca, 'xtick', 1:numbws)
    set(gca, 'xticklabel', bws)
    xlabel('bandwidth, oct')
    ylabel('I/E ratio, sum')



end

orient tall

