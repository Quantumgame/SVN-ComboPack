function PlotPrePostTC(in, varargin)
%usage: PlotPrePostTC(in, [xlimits], [ylimits])
%
% uses "out" file generated by AnalyzePrePostTC
%plots tuning curves from two separate files, e.g.before and after a
%manipulation

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


if nargin==0 
    fprintf('\nno input');
    return;
elseif nargin==1
    ylimits=-1;
    durs=getdurs(in.expdate1, in.session1, in.filenum1);
    dur=max([durs 100]);
    xlimits=[-.5*dur 1.5*dur]; %x limits for axis
elseif nargin==2
    xlimits=varargin{1};
    if isempty(xlimits)
        durs=getdurs(in.expdate1, in.session1, in.filenum1);
        dur=max([durs 100]);
        xlimits=[-.5*dur 1.5*dur]; %x limits for axis
    end
    ylimits=-1;
elseif nargin==3
    xlimits=varargin{1};
    if isempty(xlimits)
        durs=getdurs(in.expdate1, in.session1, in.filenum1);
        dur=max([durs 100]);
        xlimits=[-.5*dur 1.5*dur]; %x limits for axis
    end
    ylimits=varargin{2};
    if isempty(ylimits)
        ylimits=-1;
    end
else
 error ('wrong number of inputs')
end

M1=in.M1;
M2=in.M2;
mM1=in.mM1;
mM2=in.mM2;
MS1=in.MS1;
MS2=in.MS2;
mMS1=in.mMS1;
mMS2=in.mMS2;
mM1stim=in.mM1stim;
mM2stim=in.mM2stim;
numamps=length(in.amps);
numfreqs=length(in.freqs);
dindex=1;


tracelength=diff(xlimits); %in ms
if xlimits(1)<0
    baseline=abs(xlimits(1));
else
    baseline=0;
end


do_baseline_subtract=0;

%find optimal yaxis limits
if ylimits==-1
ylimits(1)=min(min(min(min(min(mM1)))));
ylimits(2)=max(max(max(max(max(mM1)))));

%     ylimits=[-2 -2];
%     for aindex=[numamps:-1:1]
%         for findex=1:numfreqs
%             trace1=mM1(findex, aindex, dindex, 1,:);
%             trace2=mM2(findex, aindex, dindex, 1,:);
%             if do_baseline_subtract
%                 trace1=trace1-mean(trace1(1:100));
%                 trace2=trace2-mean(trace2(1:100));
%             end
%             if min([trace1; trace2])<ylimits(1) ylimits(1)=min([trace1; trace2]);end
%             if max([trace1; trace2])>ylimits(2) ylimits(2)=max([trace1; trace2]);end
% 
%         end
%     end
end



%assuming for now that freqs and amps are identical for file1 and file2 !!!!!!!!!!!!!!!

%plot the mean tuning curves for pre and post 
f1=figure;
p=0;
% stim_offset=  ylimits(1)+.1*diff(ylimits);
stim_scalefactor=.1*diff(ylimits);
stim_offset=ylimits(1)+.2*stim_scalefactor;

subplot1( numamps,numfreqs)
for aindex=[numamps:-1:1]
    for findex=1:numfreqs
        p=p+1;
        subplot1( p)
        trace1=squeeze(mM1(findex, aindex, dindex,:));
        trace2=squeeze(mM2(findex, aindex, dindex,:));
        if do_baseline_subtract
            trace1=trace1-mean(trace1(1:100));
            trace2=trace2-mean(trace2(1:100));
        end
        stimtrace1=squeeze(mM1stim(findex, aindex, dindex,:));
        stimtrace1=stimtrace1-mean(stimtrace1(1:100));
        stimtrace1=stimtrace1./max(abs(stimtrace1));
        stimtrace2=squeeze(mM2stim(findex, aindex, dindex,:));
        stimtrace2=stimtrace2-mean(stimtrace2(1:100));
        stimtrace2=stimtrace2./max(abs(stimtrace2));
        

        t=1:length(trace1);
        t=t/10;
        plot(t, trace1, 'b', t, trace2, 'r', t, stim_scalefactor*stimtrace1+stim_offset, 'm');
       
        xlim(xlimits)
        ylim(ylimits)
        axis off
    end
end
subplot1(round(numfreqs/3))
title(sprintf('%s-%s-%s, %s-%s-%s, pre=b, post=r',in.expdate1,in.session1, in.filenum1,in.expdate2,in.session2,in.filenum2))

%label amps and freqs
p=0;
for aindex=[1:numamps]
    for findex=1:numfreqs
        p=p+1;
        subplot1(p)
        if findex==1
            text(-400, mean(ylimits),int2str(in.amps(aindex)))
        end
        if aindex==numamps
            if mod(findex,2) %odd freq
                vpos=ylimits(1);
            else
                vpos=ylimits(1);
%                 vpos=ylimits(1)-mean(ylimits);
            end
            text(0, vpos, sprintf('%d\n%.1f',findex,in.freqs(findex)/1000))
        end
    end
end

%add scale bars
subplot1(numfreqs)
xl=xlim;
yl=ylim;
line(xl, [yl(1) yl(1)])
line([xl(2) xl(2)], yl)
text(0 , ylimits(1), sprintf('%dms\n%dmV', round(t(end)-t(1)), round(diff(ylimits))))


%plot the subtraction of mean tuning curves for pre and post
f2=figure;
p=0;
subplot1( numamps,numfreqs)
for aindex=[numamps:-1:1]
    for findex=1:numfreqs
        p=p+1;
        subplot1( p)
        trace1=squeeze(mM1(findex, aindex, dindex, :));
        trace1=trace1-mean(trace1(1:100));
        trace2=squeeze(mM2(findex, aindex, dindex,:));
        trace2=trace2-mean(trace2(1:100));
        t=1:length(trace1);
        t=t/10;
        plot(t, trace1-trace2);
        ylim(ylimits)
        axis off

    end
end
subplot1(round(numfreqs/3))
title(sprintf('%s-%s-%s, %s-%s-%s, pre-post',in.expdate1,in.session1, in.filenum1,in.expdate2,in.session2,in.filenum2))


%label amps and freqs
p=0;
for aindex=[1:numamps]
    for findex=1:numfreqs
        p=p+1;
        subplot1(p)
        if findex==1
            text(-400, mean(ylimits),int2str(in.amps(aindex)))
        end
        if aindex==numamps
            if mod(findex,2) %odd freq
                vpos=ylimits(1);
            else
                vpos=ylimits(1)-mean(ylimits);
            end
            text(0, vpos, sprintf('%.1f',in.freqs(findex)/1000))
        end
    end
end

figure(f1)