function PlotVCTC(varargin)
% usage: PlotVCTC(in, [xlimits])
%    or  PlotVCTC('expdate', 'session', 'filenum', [xlimits])
% 
%inputs: 
%    in: data structure generated by ProcessVCData 
%    (or PlotVCTC(expdate, session, filenum) will load a saved outfile)
%    xlimits (optional, defaults [-50 250])
if nargin==0
    fprintf('\nno input');
    return;
elseif nargin==1
%     dur=max(in.durs);
    xlimits=[-50 250];
elseif nargin==2
    in=varargin{1};
    xlimits=varargin{2};
elseif nargin==3
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    outfile=sprintf('out%s-%s-%s.mat', expdate, session, filenum);
    godatadir(expdate, session, filenum)
    load(outfile)
    in=out;
%     dur=max(in.durs);
    xlimits=[-50 250];
elseif nargin==4
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    outfile=sprintf('out%s-%s-%s.mat', expdate, session, filenum);
    godatadir(expdate, session, filenum)
    load(outfile)
    in=out;
    xlimits=varargin{4};

else
    fprintf('\nwrong number of arguments -- use outfile as input');
    return
end
M1=in.M1;
if isfield(in, 'M1stim')
    M1stim=in.M1stim;
else
    M1stim=0*M1;
end
mM1=in.mM1;
expdate=in.expdate;
session=in.session;
filenum=in.filenum;
freqs=in.freqs;
amps=in.amps;
potentials=in.potentials;
durs=in.durs;
samprate=in.samprate;
numamps=length(amps);
numfreqs=length(freqs);
numpotentials=length(potentials);
numdurs=length(durs);

%find optimal axis limits
axmax=[0 0];
for dindex=[1:numdurs]
    for aindex=[numamps:-1:1]
        for findex=1:numfreqs
            for pindex=1:numpotentials
%                 trace1=squeeze(mM1(findex, aindex,dindex, pindex, 1, 1:xlimits(2)*samprate/1000));
                trace1=squeeze(mM1(findex, aindex,dindex, pindex, 1, :));
                if length(trace1)>xlimits(2)*samprate/1000
                    trace1=trace1(1:xlimits(2)*samprate/1000);
                end
                trace1=trace1-mean(trace1(1:100));
                %        if findex==3 & aindex==6 trace2=0*trace2;end %exclude this trace from axis optimatization
                if min([trace1])<axmax(1) axmax(1)=min([trace1]);end
                if max([trace1])>axmax(2) axmax(2)=max([trace1]);end
            end
        end
    end
end

%plot the mean tuning curve
if (numdurs>1 & numamps==1)
    figure
    c='bgrycm';
    p=0;
    subplot1( numdurs, numfreqs)
end

for dindex=[1:numdurs]
    if ~(numdurs>1 && numamps==1)
        figure
        set(gcf, 'pos', [ 90+10*dindex         619-10*dindex        1369         420])
        c='bgrycm';
        p=0;
        subplot1( numamps,numfreqs)

    end
    for aindex=[numamps:-1:1]
        for findex=1:numfreqs
            p=p+1;
            subplot1( p)
            for pindex=1:numpotentials
                trace1=squeeze(mM1(findex, aindex, dindex, pindex, :));
                trace1=trace1-mean(trace1(1:100));
                stimtrace=squeeze(M1stim(findex, aindex, dindex, pindex, 2, :));
                stimtrace=stimtrace-mean(stimtrace(1:100));
                stimtrace=stimtrace./max(abs(stimtrace));
                stimtrace=stimtrace*.1*diff(axmax);
                stimtrace=stimtrace+.8*axmax(1);
                t=1:length(trace1);
                t=t/10;
                plot(t, trace1, c(pindex), t, stimtrace, 'm');
                ylim(axmax)
                xlim(xlimits);
%                 axis off
            end
        end
    end

    %label amps and freqs
    if ~(numdurs>1 & numamps==1)
        p=0;
        for aindex=[numamps:-1:1]
            for findex=1:numfreqs
                p=p+1;
                subplot1(p)
                if findex==1
                    text(-400, mean(axmax), int2str(amps(aindex)))
                    set(gca, 'xtick', xlimits)
                else set(gca, 'xticklabel', '')
                end
                if aindex==1
                    if mod(findex,2) %odd freq
                        vpos=axmax(1);
                    else
                        vpos=axmax(1);
                    end
                    text(0, vpos-.1*diff(axmax), sprintf('%.1f (%d)', freqs(findex)/1000, findex))
                end
            end
        end
    end

end
subplot1(1)
title(sprintf('%s-%s-%s', expdate,session, filenum), 'HorizontalAl', 'right')
