function PlotWNTrain2_psthOE(expdate, session, filenum, varargin)
% usage: out=PlotWNTrain2(expdate, session, filenum, [xlimits], [ylimits], [binwidth], cell)
% plots an averaged tuning curve (psth) for WNTrain2 stimuli
%(these are WN trains at various isis but with fixed train duration)
%looks for outfile generated by ProcessWNTrain2_lfp
%machine independent

xlimits=[];
ylimits=[];
if nargin==0
    fprintf('\nnoinput\n')
    return
elseif nargin==3
    binwidth=50;
    cell=[];
elseif nargin==4
    xlimits=varargin{1};
    binwidth=50;
    cell=[];
elseif nargin==5
    xlimits=varargin{1};
    ylimits=varargin{2};
    binwidth=50;
    cell=[];
elseif nargin==6
    xlimits=varargin{1};
    ylimits=varargin{2};
    binwidth=varargin{3};
    cell=[];
elseif nargin==7
    xlimits=varargin{1};
    ylimits=varargin{2};
    binwidth=varargin{3};
    cell=varargin{4};
else
    error('PlotWNTrain2: wrong number of arguments');
end

outfilename=sprintf('out%s-%s-%s-psth',expdate,session, filenum);
fprintf('\ntrying to load %s...', outfilename)
try
    godatadir(expdate, session, filenum)
    load(outfilename)
catch
    fprintf('failed to load outfile')
    ProcessWNTrain2_psth(expdate, session, filenum, xlimits);
    load(outfilename);
end

fprintf('done\n');

mMt=out.mMt;
mMs=out.mMs;
numisis=out.numisis;
if isempty(xlimits)
    xlimits=out.xlimits;
end
fprintf('\nusing xlimits [%d %d]', xlimits)

%get ylimits
if isempty(ylimits)
    ylimits=[0 0];
    for isiindex=[1:numisis]
        spiketimes=mMt(isiindex).spiketimes;
        X=xlimits(1):binwidth:xlimits(2); %specify bin centers
        [N, x]=hist(spiketimes, X);
        N=N./out.nreps(isiindex); %normalize to spike rate (averaged across trials)
        N=1000*N./binwidth; %normalize to spike rate in Hz
        ylimits(2)=max(ylimits(2), max(N));
    end
end
stim_mag=.1*ylimits(2);
stim_offset=ylimits(1)-stim_mag;
ylimits(1)=ylimits(1)-stim_mag;

%plot the psths
figure
p=0;
subplot1(numisis, 1)
for isiindex=[1:numisis]
    p=p+1;
    subplot1( p)
    spiketimes=mMt(isiindex).spiketimes;
    trace_stim=squeeze(mMs(isiindex, :));
    trace_stim=trace_stim-median(trace_stim(1:100));
    trace_stim=trace_stim/max(trace_stim); %normalize stim
    X=xlimits(1):binwidth:xlimits(2); %specify bin centers
    [N, x]=hist(spiketimes, X);
    N=N./out.nreps(isiindex); %normalize to spike rate (averaged across trials)
    N=1000*N./binwidth; %normalize to spike rate in Hz
    bar(x, N,1);
%     line([0 0+out.durs(1)], [-.2 -.2], 'color', 'm', 'linewidth', 2)
    line(xlimits, [0 0], 'color', 'k')
    ylim(ylimits)
    xlim(xlimits)
    t=1:length(trace_stim);
    t=t/10;
    t=t+xlimits(1);
    hold on
    plot( t, stim_mag*trace_stim+stim_offset, 'r');
    title(sprintf('isi %dms, %d reps', out.isis(isiindex),out.nreps(isiindex)))
end


subplot1(1)

title(sprintf('%s-%s-%s   %s', expdate,session, filenum, get(get(gca, 'title'), 'string')))
set(gcf, 'pos', [618    72      520   900])
shg
refresh
orient tall

%plot the psths with rasters
figure
p=0;
subplot1(numisis, 1)
for isiindex=[1:numisis]
    p=p+1;
    subplot1( p)
    spiketimes=mMt(isiindex).spiketimes;
    trace_stim=squeeze(mMs(isiindex, :));
    trace_stim=trace_stim-median(trace_stim(1:100));
    trace_stim=trace_stim/max(trace_stim); %normalize stim
    X=xlimits(1):binwidth:xlimits(2); %specify bin centers
    [N, x]=hist(spiketimes, X);
    N=N./out.nreps(isiindex); %normalize to spike rate (averaged across trials)
    N=1000*N./binwidth; %normalize to spike rate in Hz
    bar(x, N,1);
%     line([0 0+out.durs(1)], [-.2 -.2], 'color', 'm', 'linewidth', 2)
    line(xlimits, [0 0], 'color', 'k')
    ylim(ylimits)
    xlim(xlimits)
    t=1:length(trace_stim);
    t=t/10;
    t=t+xlimits(1);
    hold on
    plot( t, stim_mag*trace_stim+stim_offset, 'r');
    title(sprintf('isi %dms, %d reps', out.isis(isiindex),out.nreps(isiindex)))
    
    inc=(ylimits(2))/max(out.nreps);
    for n=1:out.nreps(isiindex)
        spiketimes2=out.Mt(isiindex, n).spiketimes;
        h=plot(spiketimes2, ylimits(2)+ones(size(spiketimes2))+(n-1)*inc, '.');
        %                 set(h, 'markersize', 5)
        plot(xlimits, ylimits(2)+(n)*inc.*[1 1], 'color', [.85 .85 .85])
    end
    ylim([ylimits(1) 2*ylimits(2)])
    
end


subplot1(1)

title(sprintf('%s-%s-%s   %s', expdate,session, filenum, get(get(gca, 'title'), 'string')))
set(gcf, 'pos', [618    72      520   900])
shg
refresh
orient tall

%get "start" (first onset)
for i=1:length(out.event)
start(i)=out.event(i).Param.start;
end
if length(unique(start))>1 error ('more than one start time???');end
start=unique(start);

%get nclicks
for i=1:length(out.event)
isi=out.event(i).Param.isi;
isiindex=find(out.isis==isi);
nclicks(isiindex)=out.event(i).Param.nclicks;
end

%plot spikerate MTF
figure
for isiindex=[1:numisis]
    spiketimes=mMt(isiindex).spiketimes;
spikecount(isiindex)=length(find(spiketimes>start & spiketimes<(out.durs+start) ));
spikecount(isiindex)=spikecount(isiindex)./out.nreps(isiindex); %normalize to trial average
spikerate(isiindex)=1000*spikecount(isiindex)/out.durs;%normalize to spike rate in Hz   
end
p=plot(spikerate, '.-');
set(p, 'markersize', 30)
ylabel('firing rate, Hz')
set(gca, 'xtick', 1:numisis, 'xticklabel', out.isis)
xlim([.5 numisis+.5])
xlabel('ISI, ms')
title(sprintf('%s-%s-%s   %s', expdate,session, filenum, get(get(gca, 'title'), 'string')))

%plot spikerate cycle histograms


figure
yl=0;
subplot1(numisis, 1)
for isiindex=[1:numisis]
    isi=out.isis(isiindex);
    onsets=isi*(0:nclicks(isiindex)-1);
%     trace_stim=squeeze(mMs(isiindex, :));
%     t=1:length(trace_stim);
%     t=t/10;
%     plot(t, trace_stim,'r', onsets, zeros(size(onsets)), '.')
    spiketimes=mMt(isiindex).spiketimes;
    phase=[];
    for s=spiketimes
        if s>0 & s<onsets(end)+isi
            p=s-onsets;
            q=p(p>0);
            u=q(end);
            phase=[phase 2*pi*u/isi];
        end
    end
    subplot1(isiindex)
    hist(phase, [0:pi/10:2*pi])
    % spikecount(isiindex)=length(find(spiketimes>0 & spiketimes<out.durs ));
    % spikecount(isiindex)=spikecount(isiindex)./out.nreps(isiindex); %normalize to trial average
    % spikerate(isiindex)=1000*spikecount(isiindex)/out.durs;%normalize to spike rate in Hz
    xlim([0 2*pi])
    yl=max(yl, ylim);
end
for isiindex=[1:numisis]
    subplot1(isiindex)
    ylim(yl)
end
xlabel('phase')
subplot1(1)
title(sprintf('cycle spike histogram %s-%s-%s   %s', expdate,session, filenum, get(get(gca, 'title'), 'string')))



% % in a separate window, zoom in on individual responses
% figure
% p=0;
% subplot1(numisis, 1)
% for isiindex=[1:numisis]
%     p=p+1;
%     subplot1( p)
%     spiketimesP1=out.mMc(isiindex, 1).spiketimes; %first click
%     spiketimesP2=out.mMc(isiindex, 2).spiketimes; %second click
%     spiketimesPN=out.mMc(isiindex, out.nclicks(isiindex)).spiketimes; %last click
%     spiketimesPN5=[];
%     for n=out.nclicks(isiindex)-4:out.nclicks(isiindex)
%         spiketimesPN5=[spiketimesPN5 out.mMc(isiindex, n).spiketimes]; %last click
%     end
%     trace_stim=squeeze(out.Mcs(isiindex,1, :));
%     trace_stim=trace_stim-median(trace_stim(1:100));
%     trace_stim=trace_stim/max(trace_stim); %normalize stim
%     t=1:length(trace_stim);
%     t=t/10;
%     t=t-out.baseline;
%     [psthP1, x1]=hist(spiketimesP1, 100);
%     [psthP2, x2]=hist(spiketimesP2, 100);
%     [psthPN, xN]=hist(spiketimesPN, 100);
%     [psthPN5, xN5]=hist(spiketimesPN5, 100);
%     plot(x1, psthP1, 'b')
%     hold on
%     plot(x2, psthP2, 'g')
%     plot(xN, psthPN, 'm')
%     plot(xN5, psthPN5, 'r')
%
%  %   plot( t, stim_mag*trace_stim+stim_offset, 'r');
%  %   title(sprintf('isi %dms, %d reps', out.isis(isiindex),out.nreps(isiindex)))
% end
% legend('P1', 'P2', 'PN', 'PN5', 'stim')
%
% for p=[1:numisis]
%     subplot1( p)
%     ylim(ylimits);
% %     xlim([-150 t(end)+50])
%     T=text(mean(xlim), ylimits(2), sprintf('isi %dms, %d reps', out.isis(p),out.nreps(p)));
%      set(T, 'HorizontalAlignment', 'center','VerticalAlignment', 'top')
%
% end
%
% subplot1(1)
%
% title(sprintf('%s-%s-%s   %s', expdate,session, filenum, get(get(gca, 'title'), 'string')))
% set(gcf, 'pos', [1147          72   520   900])
% shg
% refresh
% orient tall

% %assign outputs
% out.scaledtrace=scaledtrace;
% out.M1=M1;
% out.M1stim=M1stim;
% out.mM1stim=mM1stim;
% out.mM1=mM1;
% out.username=username;
% out.expdate=expdate1;
% out.filenum=filenum1;
% out.session=session1;
% out.processed_data_dir=processed_data_dir1;
% out.processed_data_session_dir=processed_data_session_dir1;
% out.datafile=datafile1;
% out.eventsfile=eventsfile1;
% out.stimfile=stimfile1;
% out.lostat=lostat1;
% out.freqs=freqs;
% out.amps=amps;
% out.durs=durs;
% out.nreps=nreps1;
% out.numfreqs=numfreqs;
% out.numamps=numamps;
% out.numdurs=numdurs;
% out.traces_to_keep=traces_to_keep;
% out.event=event1;
% out.xlimits=xlimits;
% out.ylimits=ylimits;
% out.baseline=baseline;
% out.tracelength=tracelength;
% out.samprate=samprate;