function PlotGeGi_NBN(varargin)
%usage:     PlotGeGi(expdate, session, filenum)
%           PlotGeGi(expdate, session, filenum, [xlimits])
%           PlotGeGi(out)
% E2 tuning curve script
%plot ge and gi tuning curve for narrow-band stimuli
%looks for an outfile data structure generated by ProcessGeGi_NBN
if nargin==0
    fprintf('\nno input');
    return
elseif nargin==1
    out=varargin{1};
    dur=max(out.durs);
    if dur<200 dur=200;end
    xlimits=[-.5*dur 1.5*dur]; %x limits for axis

elseif nargin==3
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    godatadir(expdate, session, filenum)
    outfile=sprintf('out%s-%s-%s.mat', expdate, session, filenum);
    if exist(outfile)==2
        load(outfile)
        dur=max(out.durs);
        if dur<200 dur=200;end
        xlimits=[-.5*dur 1.5*dur]; %x limits for axis
        if ~isfield(out, 'GE')
            fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
            ProcessGeGi_NBN(expdate, session, filenum, 0, xlimits);
            load(outfile)

        end
    else
        fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
        ProcessGeGi_NBN(expdate, session, filenum, 0, [0 300]);
        load(outfile)

    end

elseif nargin==4
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    xlimits=varargin{4};
    godatadir(expdate, session, filenum)
    outfile=sprintf('out%s-%s-%s.mat', expdate, session, filenum);
    load(outfile)
    if exist(outfile)==2
        load(outfile)
        if ~isfield(out, 'GE')
            fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
            ProcessGeGi_NBN(expdate, session, filenum, 0, xlimits);
            load(outfile)
        end
    else
        fprintf('\ncould not find gegi data in outfile. Will run ProcessGeGi...')
        ProcessGeGi_NBN(expdate, session, filenum, 0, xlimits);
        load(outfile)
    end
    in=out;

else
    error('\nPlotGeGi: wrong number of arguments');
end


M1=out.M1;
mM1=out.mM1;
expdate=out.expdate;
session=out.session;
filenum=out.filenum;
freqs=out.freqs;
amps=out.amps;
bws=out.bws
potentials=out.potentials;
samprate=out.samprate;
numamps=length(amps);
numfreqs=length(freqs);
numpotentials=length(potentials);
numbws=length(bws);

%find optimal axis limits
ylimits=[0 0];
for bwindex=1:numbws
    for aindex=[numamps:-1:1]
        for findex=1:numfreqs
            ge=squeeze(out.GE(findex, aindex,  bwindex, :));
            gi=squeeze(out.GI(findex, aindex,  bwindex, :));
            %gsyn=squeeze(out.GSYN(findex, aindex, 1, :));
            %        if findex==3 & aindex==6 trace2=0*trace2;end %exclude this trace from axis optimatization
            %         if min([gsyn])<ylimits(1) ylimits(1)=min([gsyn]);end
            %         if max([gsyn])>ylimits(2) ylimits(2)=max([gsyn]);end
            if min([ge; gi])<ylimits(1) ylimits(1)=min([ge; gi]);end
            if max([ge; gi])>ylimits(2) ylimits(2)=max([ge; gi]);end
        end
    end
end


%ylimits(2)=10;

%plot the mean tuning curve
for aindex=[1:numamps]
    figure

    p=0;
    subplot1( numbws,numfreqs-1)

    for bwindex=[1:numbws]
        for findex=2:numfreqs
            if bwindex==numbws %inf==wn
                findex=1;
            end
            p=p+1;
            subplot1( p)

            ge=squeeze(out.GE(findex, aindex, bwindex,  :));
            gi=squeeze(out.GI(findex, aindex, bwindex,  :));
            gsyn=squeeze(out.GSYN(findex, aindex, bwindex, 1, :));
            gsynconf1=squeeze(out.GSYNconf(findex, aindex, bwindex, :,1));
            gsynconf2=squeeze(out.GSYNconf(findex, aindex, bwindex, :,2));
            if isfield(out, 'M1stim')
                stimtrace=squeeze(out.M1stim(findex, aindex, bwindex, 1, 2, :));
                stimtrace=stimtrace-mean(stimtrace(1:100));
                stimtrace=stimtrace./max(abs(stimtrace));
                stimtrace=stimtrace*.1*diff(ylimits);
                stimtrace=stimtrace+ylimits(1);
            else
                stimtrace=0*ge;
            end
            t=1:length(ge);
            t=t/10;
            plot(t, gi, 'r', t, ge, 'g', t, stimtrace, 'm')
            %plot(t, ge, 'g', t, gi, 'r', t, gsyn, 'k')
            %plot(t, ge, 'g', t, gi, 'r')
            %plot(t, ge, 'g', t, gi, 'r', t, gsyn, 'k')
            ylim(ylimits)
            if exist('xlimits') xlim(xlimits); end
            %line(out.baseline+[0 durs(dindex)], ylimits(1)*[1 1], 'linewidth', 2, 'color', [.3 .3 .3])
            axis off
            pos=get(gca, 'pos');
            pos(3)=pos(3)/2;
            set(gca, 'pos', pos)
        end
    end
    subplot1(1)
    title(sprintf('%s-%s-%s amp: %ddB', expdate,session, filenum, amps(aindex)), 'horizontala', 'right')
    %     title(sprintf('%s-%s-%s dur:%dms', expdate,session, filenum, out.durs(dindex)), 'horizontala', 'right')

    %label amps and freqs
    p=0;
    for bwindex=[1:numbws]
        for findex=2:numfreqs
            p=p+1;
            subplot1(p)
            if findex==2
                T=text(-20, mean(ylimits), sprintf('%.1f', bws(bwindex)));
                set(T, 'HorizontalAlignment', 'right')

                set(gca, 'xtick', xlimits)
            else set(gca, 'xtick', [])

            end
            if bwindex==1
                T=text(-20, ylimits(2), sprintf('BW\nOct'));
                set(T, 'HorizontalAlignment', 'right')
            end
            if bwindex==numbws

                vpos=ylimits(1);
                text(mean(xlimits), vpos, sprintf('%.1f', freqs(findex)/1000))
            else
                set(gca, 'yticklabel', '')
            end
        end
    end
end