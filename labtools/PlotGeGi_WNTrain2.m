function PlotGeGi_WNTrain2(varargin)
%usage:     PlotGeGi_WNTrain2('expdate', 'session', 'filenum')
%           PlotGeGi_WNTrain2('expdate', 'session', 'filenum', [xlimits])

% E2 tuning curve script
%plot ge and gi tuning curve
%looks for an outfile data structure generated by PlotVC_WNTrain2 or ProcessVC_WNTrain2
%if no outfile found, runs ProcessVC_WNTrain2
%loads Ge Gi if already in outfile, otherwise computes them with compute_gegi_WNTrain2


if nargin==0
    fprintf('\nno input');
    return
elseif nargin==3
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    out= load_outfile(expdate, session, filenum);
    xlimits=[-50 250]; %x limits for axis
elseif nargin==4
    expdate=varargin{1};
    session=varargin{2};
    filenum=varargin{3};
    out= load_outfile(expdate, session, filenum);
    xlimits=varargin{4};
else
    error('\nPlotGeGi_WNTrain2: wrong number of arguments');
end


Mt=out.Mt;
mMt=out.mMt;
expdate=out.expdate;
session=out.session;
filenum=out.filenum;
isis=out.isis;
potentials=out.potentials;
samprate=out.samprate;
numisis=length(isis);
numpotentials=length(potentials);
xlimits=out.xlimits;
event=out.event;

%find optimal axis limits
ylimits=[0 0];
for isiindex=1:numisis
    ge=squeeze(out.GE(isiindex, :));
    gi=squeeze(out.GI(isiindex, :));
    ge=ge(:);
    gi=gi(:);
    %gsyn=squeeze(out.GSYN(findex, aindex, 1, :));
    %        if findex==3 & aindex==6 trace2=0*trace2;end %exclude this trace from axis optimatization
    %         if min([gsyn])<axmax(1) axmax(1)=min([gsyn]);end
    %         if max([gsyn])>axmax(2) axmax(2)=max([gsyn]);end
    if min([ge; gi])<ylimits(1) ylimits(1)=min([ge; gi]);end
    if max([ge; gi])>ylimits(2) ylimits(2)=max([ge; gi]);end
end

%plot the mean tuning curve
figure

p=0;
subplot1(numisis,1)

for isiindex=1:numisis
    
    p=p+1;
    subplot1( p)
    
    ge=squeeze(out.GE(isiindex,  :));
    gi=squeeze(out.GI(isiindex,  :));
    gsyn=squeeze(out.GSYN(isiindex, 1, :));
    gsynconf1=squeeze(out.GSYNconf(isiindex, :,1));
    gsynconf2=squeeze(out.GSYNconf(isiindex, :,2));
    if isfield(out, 'Ms')
        stimtrace=squeeze(out.Ms(isiindex, 1, 2, :));
        stimtrace=stimtrace-mean(stimtrace(1:100));
        stimtrace=stimtrace./max(abs(stimtrace));
        stimtrace=stimtrace*.1*diff(ylimits);
        stimtrace=stimtrace+ylimits(1);
    else
        stimtrace=0*ge;
    end
    t=1:length(ge);
    t=t/10;
    plot(t, gi, 'r', t, ge, 'g', t, stimtrace, 'm')
    %plot(t, ge, 'g', t, gi, 'r', t, gsyn, 'k')
    %plot(t, ge, 'g', t, gi, 'r')
    %plot(t, ge, 'g', t, gi, 'r', t, gsyn, 'k')
    ylim(ylimits)
    if exist('xlimits') xlim(xlimits); end
    %line(out.baseline+[0 durs(dindex)], axmax(1)*[1 1], 'linewidth', 2, 'color', [.3 .3 .3])
    axis on
    
end

subplot1(1)
title(sprintf('%s-%s-%s ', expdate,session, filenum), 'horizontala', 'right')

%label isis
p=0;
for isiindex=1:numisis
    p=p+1;
    subplot1(p)
    text(-400, mean(ylimits), int2str(isis(isiindex)))
    
    
end

%get nclicks
for i=1:length(event)
    if strcmp(event(i).Type, 'clicktrain') | strcmp(event(i).Type, 'pulsetrain')
isi=event(i).Param.isi;
isiindex=find(isis==isi);
nclicks(isiindex)=event(i).Param.nclicks;
    end
end

%get "start" (first onset)
j=0;
for i=1:length(event)
    if strcmp(event(i).Type, 'clicktrain') | strcmp(event(i).Type, 'pulsetrain')
j=j+1;
start(j)=event(i).Param.start;
    end
end
if length(unique(start))>1 error ('more than one start time???');end
start=unique(start);

%plot cycle averages (using 2 cycles for readibility, a la gilles)
figure
yl1=[0];
yl2=[0];
subplot1(numisis, 1)
for isiindex=[1:numisis]
    isi=isis(isiindex);
    onsets=floor(isi*(0:nclicks(isiindex)-1)); %in ms
    %     trace_stim=squeeze(mMs(isiindex, :));
    %     t=1:length(trace_stim);
    %     t=t/10;
    %     plot(t, trace_stim,'r', onsets, zeros(size(onsets)), '.')
    ge=squeeze(out.GE(isiindex,  :));
    gi=squeeze(out.GI(isiindex,  :));
    startpos= .001*samprate*(start-xlimits(1)); % first click onset in samples
    ge=ge-mean(ge(1:startpos)); %subtract baseline
    gi=gi-mean(gi(1:startpos)); %subtract baseline
    ctracege=zeros(length(onsets)-1,2*isi*.001*samprate+1);
    ctracegi=zeros(length(onsets)-1,2*isi*.001*samprate+1);
    for o=1:length(onsets)-1
        startpos= .001*samprate*(onsets(o)+start-xlimits(1)); % first click onset in samples
        endpos=startpos+2*isi*.001*samprate; %a full isi after final click, in samples
        
        ctracege(o,:)=ge(startpos:endpos);
        ctracegi(o,:)=gi(startpos:endpos);
    end
    subplot1(isiindex)
    t=1:2*isi*.001*samprate+1;
    t=t/max(t); t=t*2*pi;
    %plot(t, mean(ctrace, 1),c(pindex))
    %detrending for autoscaling purposes
    plot(t, detrend(mean(ctracege, 1),'constant'),'g')
    hold on
    plot(t, detrend(mean(ctracegi, 1),'constant'),'r')
    yl2=max(yl2, ylim);
    yl1=min(yl1, ylim);
    xlim([0 2*pi])
end

%for now I am leaving ylimits autoscaled,
% or else the high-isi plots are always flat lines
% for isiindex=[1:numisis]
%     subplot1(isiindex)
%     ylim([min(yl1) max(yl2)])
% end
xlabel('phase')
subplot1(1)
title(sprintf('cycle-averaged ge, gi  %s-%s-%s   %s', expdate,session, filenum, get(get(gca, 'title'), 'string')))
set(gcf, 'pos', [800    87   520   900])


function out= load_outfile(expdate, session, filenum) %NOT a nested function because it's NOT terminated with 'end' , NO access to variables in main function

godatadir(expdate, session, filenum)
outfilename=sprintf('out%s-%s-%s.mat', expdate, session, filenum);
fprintf('%s', outfilename)

if exist(outfilename)==2
    load(outfilename);
    out.outfilename=outfilename;
    if ~isfield(out, 'GE')
        warning('could not find gegi data in outfile. Will now compute ge, gi')
        out=ProcessGeGiWNTrain2(out);
    end
else
    warning('could not find outfile. Will now run ProcessVC_WNTrain2')
%     ProcessVC_WNTrain2(expdate, session, filenum)
%apparently I have not yet written ProcessVC_WNTrain2, so for now using
%PlotVC_WNTrain2
     PlotVC_WNTrain2(expdate, session, filenum)
    load(outfilename);
    out.outfilename=outfilename;
    ProcessGeGiWNTrain2(out)
    
end

function out=ProcessGeGiWNTrain2(out)
out.A=1;
out.Ee=0;
out.Ei=-85;
out=get_correctedV_WNTrain2(out);
out=compute_ge_gi_WNTrain2(out);

outfilename=out.outfilename;
save (outfilename, 'out')
fprintf('\n saved to %s', outfilename)

