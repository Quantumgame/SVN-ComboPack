function PlotPrePostTC_spikes(expdate1, session1, filenum1, expdate2, session2, filenum2)
% loads "out" file generated by AnalyzePrePostTC
%plots tuning curves from two separate files, e.g.before and after a
%manipulation

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

godatadir(expdate1, session1, filenum1)
outfile=sprintf('out%s-%s-%s-%s-%s-%s', expdate1, session1, filenum1, expdate2, session2, filenum2);
load(outfile)

amps=out.amps;
freqs=out.freqs;
M1=out.M1;
M2=out.M2;
mM1=out.mM1;
mM2=out.mM2;
MS1=out.MS1;
MS2=out.MS2;
mMS1=out.mMS1;
mMS2=out.mMS2;
mM1stim=out.mM1stim;
mM2stim=out.mM2stim;
numamps=length(out.amps);
numfreqs=length(out.freqs);
dindex=1;

do_baseline_subtract=0;

%find optimal axis limits
axmax=[0 0];
for aindex=[numamps:-1:1]
    for findex=1:numfreqs
        trace1=squeeze(mM1(findex, aindex, dindex,:));
        trace1=trace1-mean(trace1(1:100));
        trace2=squeeze(mM2(findex, aindex, dindex,:));
        trace2=trace2-mean(trace2(1:100));
        %        if findex==30 & aindex==3 trace1=0*trace1;end%exclude this trace from axis optimatization
        %        if findex==3 & aindex==6 trace2=0*trace2;end%exclude this trace from axis optimatization
        %         if min([trace1; -trace2])<axmax(1) axmax(1)=min([trace1; -trace2]);end
        %         if max([trace1; -trace2])>axmax(2) axmax(2)=max([trace1; -trace2]);end
        if min([trace1; trace2])<axmax(1) axmax(1)=min([trace1; trace2]);end
        if max([trace1; trace2])>axmax(2) axmax(2)=max([trace1; trace2]);end
    end
end


%plot the mean tuning curves for pre and post (red not inverted)
figure
offset=0; %shift traces down to make room for psth
room_for_spikes=diff(ylim)/10;
spike_scale_factor=room_for_spikes/max(max(max([mMS1 mMS2]))); %scale spike counts to max=20 mV for co-plotting
p=0;
subplot1( numamps,numfreqs)
for aindex=[numamps:-1:1]
    for findex=1:numfreqs
        p=p+1;
        subplot1( p)
        trace1=squeeze(mM1(findex, aindex, dindex,:));
        trace1=trace1-mean(trace1(1:100));
        trace2=squeeze(mM2(findex, aindex, dindex,:));
        trace2=trace2-mean(trace2(1:100));
        t=1:length(trace1);
        t=t/10;
        plot(t, trace1-offset, 'b', t, trace2-offset, 'r');
        axmax2=axmax;axmax2(2)=axmax(2)+room_for_spikes; %add 20 mV room for spikes
        ylim(axmax2)
        axis off
        spikecount1=mMS1(findex, aindex);
        spikecount2=mMS2(findex, aindex);
        hold on
        L0=line([100 200], [axmax(2) axmax(2)]);
        L1=line([100 100],[axmax(2) axmax(2)+spike_scale_factor*spikecount1]);
        L2=line([200 200],[axmax(2) axmax(2)+spike_scale_factor*spikecount2]);
        set(L0, 'linewidth', .5, 'color', 'k')
        set(L1, 'linewidth', 5, 'color', 'b')
        set(L2, 'linewidth', 5, 'color', 'r')
    end
end
subplot1(ceil(numfreqs/3))
title(sprintf('%s-%s-%s, %s-%s-%s, pre=b, post=r',expdate1,session1, filenum1,expdate2,session2,filenum2))

%label amps and freqs
p=0;
for aindex=[1:numamps]
    for findex=1:numfreqs
        p=p+1;
        subplot1(p)
        if findex==1
            text(-400, mean(axmax),int2str(amps(aindex)))
        end
        if aindex==numamps
            if mod(findex,2) %odd freq
                vpos=axmax(1);
            else
                vpos=axmax(1)-mean(axmax);
            end
            text(0, vpos, sprintf('%.1f',freqs(findex)/1000))
        end
    end
end

%label max spikecount
LL=line([300 300],[axmax(2) axmax(2)+spike_scale_factor*max(max(max([mMS1 mMS2]))) ]);
set(LL, 'linewidth', 1, 'color', 'k')
text(350, axmax(2), sprintf('%.2fsp', max(max(max([mMS1 mMS2])))))
